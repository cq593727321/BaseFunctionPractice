apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"
    defaultConfig {
        applicationId "com.cq.basefunctionpractice"
        minSdkVersion 17
        targetSdkVersion 24
        versionCode getSelfDefinedVersion("code")
        versionName getSelfDefinedVersion("name")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:design:24.2.1'
    testCompile 'junit:junit:4.12'
}

def getSelfDefinedVersion(type) {
    int majorVersion = 1 // 大版本号
    int minorVersion = 0 // 次版本号
    Process process = "git rev-list --count HEAD".execute()
    process.waitFor()
    int correctedVersion = process.getText().toInteger() // 修正版本号（Git库的提交次数）

    if ("code".equals(type)) {
        majorVersion * 100000000 + minorVersion * 1000000 + correctedVersion
    } else if ("name".equals(type)) {
        String today = new Date().format("yyMMdd")
        process = "git describe --always".execute()
        process.waitFor()
        String sha1 = process.getText().trim() // Git库HEAD的SHA1码前5位
        "$majorVersion.$minorVersion.$correctedVersion.$today.$sha1"
    }
}